// Configuration du datasource PostgreSQL
generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas  = ["landing", "public"]
}

// Définition des langues disponibles
model Language {
  id           Int           @id @default(autoincrement())
  code         String        @unique // ex: fr, en, es
  name         String // ex: Français, English, Español
  isDefault    Boolean       @default(false)
  translations Translation[]

  @@schema("landing")
}

// Table de traduction générique
model Translation {
  id         Int      @id @default(autoincrement())
  entityType String // Le type d'entité (ex: "Team")
  entityId   Int // L'ID de l'entité (ex: ID du membre de l'équipe)
  field      String // Le champ à traduire (ex: "intro", "description")
  value      String // La valeur traduite
  languageId Int
  language   Language @relation(fields: [languageId], references: [id], onDelete: Cascade)

  @@unique([entityType, entityId, field, languageId])
  @@index([entityType, entityId])
  @@index([languageId])
  @@schema("landing")
}

// Modèle Utilisateur
model Team {
  id           Int     @id @default(autoincrement())
  firstName    String
  lastName     String
  email        String
  role         String
  intro        String?
  description  String?
  photoUrl1    String?
  photoUrl2    String?
  linkedinUrl  String?
  instagramUrl String?
  facebookUrl  String?
  githubUrl    String?
  twitterUrl   String?
  websiteUrl   String?

  @@schema("landing")
}

model Faq {
  id       Int    @id @default(autoincrement())
  question String
  answer   String
  order    Int

  @@schema("landing")
}

// Modèle pour l'en-tête de FAQ détaillée
model DetailedFaqHeader {
  id       Int               @id @default(autoincrement())
  name     String
  faqItems DetailedFaqItem[]

  @@schema("landing")
}

// Modèle pour les éléments de FAQ détaillée
model DetailedFaqItem {
  id            Int               @id @default(autoincrement())
  question      String
  answer        String
  detailedFaqId Int
  header        DetailedFaqHeader @relation(fields: [detailedFaqId], references: [id])

  @@index([detailedFaqId])
  @@schema("landing")
}

model Artist {
  id              Int              @id @default(autoincrement())
  name            String
  surname         String
  pseudo          String           @unique
  intro           String?
  description     String           @unique
  artworkStyle    String?
  publicKey       String           @unique
  imageUrl        String           @unique
  isGallery       Boolean          @default(false)
  backgroundImage String?
  LandingArtist   LandingArtist[]
  presaleArtworks PresaleArtwork[]

  @@schema("public")
}

model LandingArtist {
  id            Int      @id @default(autoincrement())
  slug          String   @unique
  intro         String?
  artworkImages Json     @default("[]")
  artworkStyle  String?
  artistsPage   Boolean? @default(false)
  imageUrl      String   @unique
  artistId      Int
  artist        Artist   @relation(fields: [artistId], references: [id])

  @@index([artistId])
  @@schema("landing")
}

model EmailNewsLetter {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  createdAt DateTime @default(now())

  @@schema("landing")
}

model EmailPresaleArtwork {
  id        Int            @id @default(autoincrement())
  email     String
  createdAt DateTime       @default(now())
  slugArtwork String

  @@schema("landing")
}

model PresaleArtwork {
  id            Int            @id @default(autoincrement())
  name          String
  description   String?
  order         Int?
  artistId      Int
  price         Int?
  imageUrl      String         @unique
  mockupUrls    Json           @default("[]")
  artist        Artist         @relation(fields: [artistId], references: [id])
  
  @@index([artistId])
  @@schema("landing")
}

model EmailToken {
  id          Int      @id @default(autoincrement())
  name        String
  email       String
  phoneNumber String
  createdAt   DateTime @default(now())

  @@schema("landing")
}
